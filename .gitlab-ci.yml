# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

variables:
  ID_RSA: "-----BEGIN OPENSSH PRIVATE KEY-----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-----END OPENSSH PRIVATE KEY----"

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script:
  #   - apt update && apt -y install make autoconf
  script:
    - g++ helloworld.cpp -o mybinary
  artifacts:
    paths:
      - mybinary
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  script:
    - ./runmytests.sh

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production
